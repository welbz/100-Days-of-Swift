{\rtf1\ansi\ansicpg1252\cocoartf2571
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red33\green33\blue33;\red255\green255\blue255;\red33\green33\blue33;
}
{\*\expandedcolortbl;;\cssrgb\c17255\c17255\c17255;\cssrgb\c100000\c100000\c100000;\cssrgb\c17255\c17255\c17255;
}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl432\sa240\partightenfactor0

\f0\fs26\fsmilli13200 \cf2 \cb3 \expnd0\expndtw0\kerning0
Launch\
When a player taps the launch button, we need to hide the user interface so they can't try to fire again until we're ready, then tell the game scene to launch a banana using the current angle and velocity. Our game will then proceed with physics calculations until the banana is destroyed or lost (i.e., off screen), at which point the game will tell the game controller to change players and continue.\
 The code for the launch() method - the work of actually launching the banana is hidden behind a call to a launch() method that we'll add to the game scene shortly\
\
\
Texture atlases\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\sl432\sa240\partightenfactor0
\cf4 add in the images to be used inside the game, used a special technique called texture atlases. \
SpriteKit doesn't use them by default, which is why we haven't used them yet \'96 there are bigger things to worry about! But this game is perfect for texture atlases, so we're going to use them now.\
A texture atlas is a set of pictures that are combined into a single image. They might be stored in their original orientation, or they might be rotated. Alongside those images, the atlas also contains positions and sizes, which means to render one of those pictures SpriteKit loads the whole atlas and just draws the small window that represents the image you want.\
Texture atlases allows SpriteKit to draw lots of images without having to load and unload textures \'96 it effectively just crops the big image as needed. Xcode automatically generates these atlases for us, even rotating sprites to make them fit more efficiently. And the best bit: just like using Assets.xcassets, you don't need to change your code to make them work; just load sprites the same way you've always done.\
We use a texture atlas for our game, so open Assets.xcassets, right-click in the big empty space below AppIcon, and choose New Sprite Atlas. You should then drag all the images for this project onto that atlas, and drag the two particle systems directly into your Xcode project.\
}